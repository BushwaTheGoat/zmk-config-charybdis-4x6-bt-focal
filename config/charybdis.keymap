#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        thlt: tap_hold_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap/Hold layer toggle";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Focal {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3        &kp N4          &kp N5           &kp N6     &kp N7     &kp N8              &kp N9              &kp N0         &kp BACKSPACE
&kp LGUI   &kp V   &kp L   &kp H         &kp G           &kp K            &kp Q      &kp F      &mt SEMICOLON O     &mt LEFT_BRACKET U  &kp J          &kp SLASH
&kp TAB    &kp S   &kp R   &kp N         &kp T           &kp B            &kp Z      &kp C      &mt SINGLE_QUOTE A  &kp E               &kp I          &mo 3
&kp LCTRL  &kp Y   &kp X   &kp M         &kp D           &lt 7 P          &kp MINUS  &kp W      &kp PERIOD          &kp COMMA           &kp LS(MINUS)  &mo 5
                           &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 4            &kp ENTER  &kp SPACE
                                         &kp SPACE       &kp BACKSPACE    &kp DEL
            >;
        };

        Focal-Game {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp F1  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &kp F2    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        qwerty-Game {
            bindings = <
&kp F6   &kp F1     &kp F2  &kp F3  &kp F4     &kp F5       &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB  &kp N1     &kp N2  &kp N3  &kp N4     &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&kp Q    &kp LSHFT  &kp A   &kp W   &kp D      &kp E        &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp Z      &kp X   &kp S   &kp M      &trans       &trans  &trans  &trans  &trans  &trans  &to 0
                            &trans  &kp SPACE  &kp LSHFT    &trans  &trans
                                    &trans     &trans       &trans
            >;
        };

        Symbol {
            bindings = <
&trans  &kp LS(RIGHT_BRACKET)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp GT        &kp LS(N5)           &kp LS(NUMBER_6)  &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)     &trans                    &trans        &trans
&trans  &kp COMMA              &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3  &kp LS(PIPE)         &kp RA(N7)        &kp RA(SINGLE_QUOTE)  &kp RA(PIPE)              &none                     &kp MINUS     &kp LS(UNDER)
&trans  &kp PERIOD             &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6  &trans               &none             &kp LS(NUMBER_8)      &kp LS(NUMBER_9)          &kp RA(NON_US_BACKSLASH)  &kp PLUS      &to 0
&trans  &kp NUMBER_0           &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9  &kp LS(AMPERSAND)    &kp LS(NUMBER_2)  &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp LS(NUMBER_7)          &kp RA(PLUS)  &kp EQUAL
                                                 &trans            &trans        &trans               &trans            &trans
                                                                   &trans        &trans               &trans
            >;
        };

        Mouse-Auto {
            bindings = <
&kp F12  &kp F1          &kp F2          &kp F3        &kp F4           &kp F5    &kp F6  &kp F7         &kp F8         &kp F9         &kp F10    &kp F11
&trans   &kp DOWN_ARROW  &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none     &none   &kp LC(PG_UP)  &kp LC(PG_DN)  &kp LS(LC(T))  &kp LC(W)  &none
&trans   &mkp MB2        &mkp MB3        &mo 6         &mkp MB1         &mo 5     &none   &mkp MB4       &mkp MB5       &mkp MB3       &none      &trans
&trans   &kp PAGE_DOWN   &kp HOME        &kp PG_UP     &kp END          &none     &none   &none          &mkp MB1       &mo 6          &mo 5      &trans
                                         &trans        &trans           &to 0     &trans  &trans
                                                       &trans           &trans    &trans
            >;
        };

        Mouse-Snipe {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &mo 6   &mo 6   &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        Mouse-Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR_ALL  &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans  &to 3
&trans  &trans          &trans        &bt BT_CLR    &trans        &trans          &bt BT_NXT  &trans  &trans  &trans  &to 2   &to 1
                                      &trans        &trans        &to 4           &trans      &trans
                                                    &trans        &trans          &trans
            >;
        };
    };
};
