# https://github.com/caksoylar/keymap-drawer
draw_config:
  key_w: 60
  key_h: 56
  split_gap: 30.0
  combo_w: 28
  combo_h: 26
  key_rx: 6.0
  key_ry: 6.0
  dark_mode: auto
  n_columns: 1
  separate_combo_diagrams: true
  combo_diagrams_scale: 2
  inner_pad_w: 2.0
  inner_pad_h: 2.0
  outer_pad_w: 30.0
  outer_pad_h: 56.0
  line_spacing: 1.2
  arc_radius: 6.0
  append_colon_to_layer_header: true
  small_pad: 2.0
  legend_rel_x: 0.0
  legend_rel_y: 0.0
  key_styles:
  layer_switch:
    text-decoration: underline
  draw_key_sides: false
  footer_text: ""
  shrink_wide_legends: 7
  style_layer_activators: true
  glyph_tap_size: 14
  glyph_hold_size: 12
  glyph_shifted_size: 10
  glyphs: {}
parse_config:
  preprocess: true
  skip_binding_parsing: false
  raw_binding_map: {}
  sticky_label: sticky
  toggle_label: toggle
  tap_toggle_label: tap-toggle
  trans_legend:
    t: ▽
    type: trans
  mark_alternate_layer_activators: false
  modifier_fn_map:
    left_ctrl: Ctl
    right_ctrl: Ctl
    left_shift: Sft
    right_shift: Sft
    left_alt: Alt
    right_alt: AGr
    left_gui: Gui
    right_gui: Gui
    keycode_combiner: "{mods}+ {key}"
    mod_combiner: "{mod_1}+{mod_2}"
    special_combinations:
      left_ctrl+left_alt+left_gui+left_shift: Hyper
      left_ctrl+left_alt+left_shift: Meh
  qmk_remove_keycode_prefix:
    - KC_
  qmk_keycode_map:
    Z: "Y"
    Y: "Z"
    XXXXXXX: ""
    "NO": ""
    MINUS: "'"
    MINS: "'"
    EQUAL: "="
    EQL: "="
    LEFT_BRACKET: "["
    LBRC: "["
    RIGHT_BRACKET: "]"
    RBRC: "]"
    BACKSLASH: \
    BSLS: \
    NONUS_HASH: "*"
    NUHS: "*"
    SEMICOLON: "ö"
    SCLN: ;
    QUOTE: "'"
    QUOT: "'"
    GRAVE: "`"
    GRV: "`"
    COMMA: ","
    COMM: ","
    DOT: .
    SLASH: "-"
    SLSH: "-"
    TILDE: "~"
    TILD: "~"
    EXCLAIM: "+"
    EXLM: "+"
    AT: '"'
    HASH: "*"
    DOLLAR: "ç"
    DLR: "ç"
    PERCENT: "%"
    PERC: "%"
    CIRCUMFLEX: "&"
    CIRC: "&"
    AMPERSAND: "/"
    AMPR: "/"
    ASTERISK: "("
    ASTR: "("
    LEFT_PAREN: )
    LPRN: )
    RIGHT_PAREN: "="
    RPRN: "="
    UNDERSCORE: "?"
    UNDS: "?"
    PLUS: +
    LEFT_CURLY_BRACE: "{"
    LCBR: "{"
    RIGHT_CURLY_BRACE: "!"
    RCBR: "!"
    PIPE: "|"
    COLON: ":"
    COLN: ":"
    DOUBLE_QUOTE: '"'
    DQUO: '"'
    DQT: '"'
    LEFT_ANGLE_BRACKET: <
    LABK: <
    LT: <
    RIGHT_ANGLE_BRACKET: ">"
    RABK: ">"
    GT: ">"
    QUESTION:  "_"
    QUES:  "_"
  zmk_remove_keycode_prefix: []
  zmk_keycode_map:
    Z: "Y"
    Y: "Z"
    EXCLAMATION: "+"
    EXCL: "+"
    AT_SIGN: '"'
    AT: '"'
    HASH: "*"
    POUND: "*"
    DOLLAR: "ç"
    DLLR: "ç"
    PERCENT: "%"
    PRCNT: "%"
    CARET: "&"
    AMPERSAND: "/"
    AMPS: "/"
    ASTERISK: "("
    ASTRK: "("
    STAR: "("
    LEFT_PARENTHESIS: )
    LPAR: )
    RIGHT_PARENTHESIS: "="
    RPAR: "="
    EQUAL: "="
    PLUS: +
    MINUS: "'"
    UNDERSCORE: "?"
    UNDER: "?"
    SLASH: "-"
    FSLH: "-"
    QUESTION:  "_"
    QMARK:  "_"
    BACKSLASH: \
    BSLH: \
    PIPE: "|"
    NON_US_BACKSLASH: \
    PIPE2: "|"
    NON_US_BSLH: "|"
    SEMICOLON: "ö"
    SEMI: "ö"
    COLON: ":"
    SINGLE_QUOTE: "ä"
    SQT: "ä"
    APOSTROPHE: "'"
    APOS: "'"
    DOUBLE_QUOTES: '"'
    DQT: '"'
    COMMA: ","
    LESS_THAN: <
    LT: <
    PERIOD: .
    DOT: .
    GREATER_THAN: ">"
    GT: ">"
    LEFT_BRACKET: "ü"
    LBKT: "["
    LEFT_BRACE: "ü"
    LBRC: "{"
    RIGHT_BRACKET: "]"
    RBKT: "]"
    RIGHT_BRACE: "!"
    RBRC: "!"
    GRAVE: "`"
    TILDE: "~"
    NON_US_HASH: "*"
    NUHS: "*"
    TILDE2: "~"
    LA(LC(T)): "SHELL"
    C_AC_SEARCH: "SEARCH"
    LG(E): "WINDOW"
    LC(LA(LEFT_SHIFT)): "MEH"
    LA(LC(LG(LEFT_SHIFT))): "HYPER"
    LC(F10): "ALL WIN"
    LS(LC(H)): "PANE ◀"
    LS(LC(J)): "PANE ▲"
    LS(LC(K)): "PANE ▼"
    LS(LC(L)): "PANE ▶"
    LEFT_ARROW: "LEFT"
    RIGHT_ARROW: "RIGHT"
    C_AC_UNDO: "UNDO"
    C_AC_CUT: "CUT"
    C_AC_COPY: "COPY"
    C_AC_PASTE: "PASTE"
    C_AL_COFFEE: "LOCK"
    PRINTSCREEN: "PRINT SCREEN"
    BACKSPACE: "BACK SPACE"
    LC(LA(E)): "FIT"
    LS(DELETE): "SHRED"
    LA(LC(LS(Z))): "TAG Z"
    LA(LC(LS(E))): "TAG E"
    LA(LC(LS(A))): "TAG A"
    LA(LC(LS(S))): "TAG S"
    LA(LC(LS(B))): "TAG B"
    LA(LS(A)): "SHOW TAGS"
    LA(KP_N1): "REJECT"
    LA(KP_N2): "PENDING"
    LA(KP_N3): "ACCEPT"
    F12: "DEV TOOLS"
    BRIGHTNESS INC: "BRIGHT ▲"
    BRIGHTNESS DEC: "BRIGHT ▼"
  zmk_combos: {}
  zmk_preamble: "#define KEYMAP_DRAWER"
  zmk_additional_includes: []
